{"ast":null,"code":"var _jsxFileName = \"/Users/alexchen/Documents/React/Section 22/Section-22-starting-project/frontend/src/pages/Authentication.js\";\nimport { json, redirect } from 'react-router-dom';\nimport AuthForm from '../components/AuthForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AuthenticationPage() {\n  return /*#__PURE__*/_jsxDEV(AuthForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 10\n  }, this);\n}\n_c = AuthenticationPage;\nexport default AuthenticationPage;\nexport async function action({\n  request\n}) {\n  const searchParams = new URL(request.URL).searchParams;\n  const mode = searchParams.mode ? searchParams.mode : \"login\";\n  if (mode !== \"login\" && mode !== \"signup\") {\n    throw json({\n      \"message\": \"unsupported mode\"\n    }, {\n      status: \"422\"\n    });\n  }\n  const data = await request.formData();\n  const autData = {\n    email: data.get('email'),\n    password: data.get('password')\n  };\n  const response = await fetch('http:localhost:8080/' + mode, {\n    method: \"POST\",\n    headers: {\n      \"Content-type\": \"application/json\"\n    },\n    body: JSON.stringify(autData)\n  });\n  if (response.status === 422 || response.status === 401) {\n    return response;\n  }\n  redirect('/');\n}\nvar _c;\n$RefreshReg$(_c, \"AuthenticationPage\");","map":{"version":3,"names":["json","redirect","AuthForm","jsxDEV","_jsxDEV","AuthenticationPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","searchParams","URL","mode","status","data","formData","autData","email","get","password","response","fetch","method","headers","body","JSON","stringify","$RefreshReg$"],"sources":["/Users/alexchen/Documents/React/Section 22/Section-22-starting-project/frontend/src/pages/Authentication.js"],"sourcesContent":["import { json, redirect } from 'react-router-dom';\nimport AuthForm from '../components/AuthForm';\n\nfunction AuthenticationPage() {\n  return <AuthForm />;\n}\n\nexport default AuthenticationPage;\n\nexport async function action({request}){\n  const searchParams = new URL(request.URL).searchParams;\n  const mode = searchParams.mode ? searchParams.mode : \"login\";\n\n  if(mode !== \"login\" && mode !== \"signup\"){\n    throw json({\"message\": \"unsupported mode\"}, {status: \"422\"});\n  }\n\n  const data = await request.formData();\n  const autData = {\n    email: data.get('email'),\n    password: data.get('password')\n  }\n\n  const response = await fetch('http:localhost:8080/'+mode,\n    {\n      method: \"POST\",\n      headers: {\n        \"Content-type\":\"application/json\"\n      },\n      body: JSON.stringify(autData)\n    }\n  );\n\n  if(response.status === 422 || response.status === 401){\n    return response;\n  }\n\n  redirect('/');\n}"],"mappings":";AAAA,SAASA,IAAI,EAAEC,QAAQ,QAAQ,kBAAkB;AACjD,OAAOC,QAAQ,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,SAASC,kBAAkBA,CAAA,EAAG;EAC5B,oBAAOD,OAAA,CAACF,QAAQ;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACrB;AAACC,EAAA,GAFQL,kBAAkB;AAI3B,eAAeA,kBAAkB;AAEjC,OAAO,eAAeM,MAAMA,CAAC;EAACC;AAAO,CAAC,EAAC;EACrC,MAAMC,YAAY,GAAG,IAAIC,GAAG,CAACF,OAAO,CAACE,GAAG,CAAC,CAACD,YAAY;EACtD,MAAME,IAAI,GAAGF,YAAY,CAACE,IAAI,GAAGF,YAAY,CAACE,IAAI,GAAG,OAAO;EAE5D,IAAGA,IAAI,KAAK,OAAO,IAAIA,IAAI,KAAK,QAAQ,EAAC;IACvC,MAAMf,IAAI,CAAC;MAAC,SAAS,EAAE;IAAkB,CAAC,EAAE;MAACgB,MAAM,EAAE;IAAK,CAAC,CAAC;EAC9D;EAEA,MAAMC,IAAI,GAAG,MAAML,OAAO,CAACM,QAAQ,CAAC,CAAC;EACrC,MAAMC,OAAO,GAAG;IACdC,KAAK,EAAEH,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBC,QAAQ,EAAEL,IAAI,CAACI,GAAG,CAAC,UAAU;EAC/B,CAAC;EAED,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,sBAAsB,GAACT,IAAI,EACtD;IACEU,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAC;IACjB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACV,OAAO;EAC9B,CACF,CAAC;EAED,IAAGI,QAAQ,CAACP,MAAM,KAAK,GAAG,IAAIO,QAAQ,CAACP,MAAM,KAAK,GAAG,EAAC;IACpD,OAAOO,QAAQ;EACjB;EAEAtB,QAAQ,CAAC,GAAG,CAAC;AACf;AAAC,IAAAS,EAAA;AAAAoB,YAAA,CAAApB,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}